<?xml version="1.0" encoding="UTF-8"?>
<beans 
      xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:aop="http://www.springframework.org/schema/aop"
      xmlns:tx="http://www.springframework.org/schema/tx"
	  xmlns:mvc="http://www.springframework.org/schema/mvc"
		
      xsi:schemaLocation="
	
	  http://www.springframework.org/schema/beans 
	  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	  
	  http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
 	  
	  http://www.springframework.org/schema/aop 
	  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	  
	  http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        
      ">

	<!-- dao实例加入容器 -->	
	<bean id="userDao" class="cn.itcast.f_aop_xml.UserDao"></bean>
	
	<!-- 实例化切面类 -->
	<bean id="aop" class="cn.itcast.f_aop_xml.TransactionAop"></bean>
	
	<!-- Aop相关配置 -->
	<aop:config>
		<!-- 切入点表达式定义 --><!-- 通过切入点表达式拦截目标方法(这里拦截的是UserDao类中的所有方法) -->
		<aop:pointcut expression="execution(* cn.itcast.f_aop_xml.UserDao.*(..))" id="pt"/>
		<!-- 切面配置 -->
		<aop:aspect ref="aop">
			<!-- 【环绕通知】   method:表示环绕通知的方法      pointcut-ref:表示引用的切入点表达式-->
			<aop:around method="arroud" pointcut-ref="pt"/>
			
			<!-- 【前置通知】在目标方法之前执行 -->
			<aop:before method="beginTransaction" pointcut-ref="pt"/>
			
			<!-- 【后置通知】 -->
			<aop:after method="commit" pointcut-ref="pt"/>
			
			<!-- 【返回后通知】 -->
			<aop:after-returning method="afterReturing" pointcut-ref="pt"/>
			
			<!-- 【异常通知】 -->
			<aop:after-throwing method="afterThrowing" pointcut-ref="pt"/>
		</aop:aspect>
	</aop:config>
	
</beans>     